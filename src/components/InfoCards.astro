---
// Fetch calculator data
import calculatorData from '../../public/calculatorData.json';

// Extract unique countries and languages
const countries = Object.keys(calculatorData).sort();
const languages = new Set();

// Get all unique programming languages
for (const country in calculatorData) {
  Object.keys(calculatorData[country]).forEach(lang => languages.add(lang));
}

const programmingLanguages = Array.from(languages).sort();
---

<div class="info-cards">
  <div class="card dark">
    <div class="card-text">
      <div class="select-container">
        <label for="programming-language">Programming Language</label>
        <select id="programming-language" name="programming-language">
          {programmingLanguages.map(language => (
            <option value={language}>{language}</option>
          ))}
        </select>
      </div>
      <div class="select-container">
        <label for="country">Country</label>
        <select id="country" name="country">
          {countries.map(country => (
            <option value={country}>{country}</option>
          ))}
        </select>
      </div>
    </div>
  </div>
  <div class="card light">
    <div class="card-text">
      Coding specialists from <span id="selected-country" class="highlight">Brazil</span> who use <span id="selected-language" class="highlight">C / C++</span> reported to have the following gross annual salaries (in USD including bonuses) in 2024:
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const countrySelect = document.getElementById('country');
    const languageSelect = document.getElementById('programming-language');
    const selectedCountry = document.getElementById('selected-country');
    const selectedLanguage = document.getElementById('selected-language');

    // Set initial values
    selectedCountry.textContent = countrySelect.value;
    selectedLanguage.textContent = languageSelect.value;

    // Update when selections change
    countrySelect.addEventListener('change', () => {
      selectedCountry.textContent = countrySelect.value;
    });

    languageSelect.addEventListener('change', () => {
      selectedLanguage.textContent = languageSelect.value;
    });
  });
</script>

<style>
  .info-cards {
    display: flex;
    gap: 3rem;
    margin-top: -1rem;
    width: 100%;
  }

  .card {
    padding: 1.5rem;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
  }

  .card.dark {
    background-color: #19191c;
    flex: 1;
  }

  .card.light {
    background-color: white;
    flex: 2.5;
  }

  .card-text {
    font-size: 1.4rem;
    line-height: 1.5;
  }

  .dark .card-text {
    color: white;
  }

  .light .card-text {
    color: black;
  }

  .select-container {
    margin-bottom: 1rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
  }

  select {
    width: 100%;
    padding: 0.5rem;
    border-radius: 4px;
    background-color: #2a2a2d;
    color: white;
    border: 1px solid #3a3a3d;
    font-size: 1.4rem;
  }

  .highlight {
    color: #6b57ff;
    font-weight: 500;
  }
</style>
